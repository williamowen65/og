node {

   def commit_id

  try {
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"                        
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('test') {
     nodejs(nodeJSInstallationName: 'nodejs') {
       sh 'npm install --legacy-peer-deps'
       sh 'npm test'
     }
   }
   stage('update docs') {
      nodejs(nodeJSInstallationName: 'nodejs') {
       sh 'npm install --legacy-peer-deps'
       sh 'npm run build'
       sh 'git config --global user.email "jenkins@donotreply.com"'
       sh 'git config --global user.name "jenkins/williamowen"'
       sh 'git remote -v'
       sh 'git commit -am "Jenkins updating docs folder for github pages"'
       sh 'git push -u origin main'
     }
   } 





  } catch(e){
        // mark build as failed
    currentBuild.result = "FAILURE";

    // send slack notification
    slackSend (channel:"#read-voices",color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}/console)")

    // throw the error
    throw e;
  }
    slackSend (channel: "#read-voices", color: '#FF0000', message: "SUCCESS ðŸŽˆ: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' ('islandhopper152/read_voices:${commit_id}')")
}